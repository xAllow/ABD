--DESDE PACKAGE BASE

create or replace PACKAGE BASE AS
    EXCEPCION_CREACION EXCEPTION;
    EXCEPCION_MODIFICACION EXCEPTION;
    EXCEPCION_ELIMINACION EXCEPTION;
    EXCEPCION_LECTURA EXCEPTION;
    TYPE TCLIENTE IS RECORD (
        NOMBRE USUARIO.NOMBRE%TYPE,
        APELLIDOS USUARIO.APELLIDOS%TYPE,
        TELEFONO USUARIO.TELEFONO%TYPE,
        DIRECCION USUARIO.DIRECCION%TYPE,
        CORREOE USUARIO.CORREOE%TYPE,
        OBJETIVOS CLIENTE.OBJETIVO%TYPE,
        DIETA CLIENTE.DIETA_ID%TYPE,
        PREFERENCIAS CLIENTE.PREFERENCIAS%TYPE,
        CENTRO CLIENTE.CENTRO_ID%TYPE
    );
    PROCEDURE CREA_CLIENTE(
        P_DATOS IN TCLIENTE,
        P_USERPASS IN VARCHAR2,
        P_USUARIO OUT USUARIO%ROWTYPE,
        P_CLIENTE OUT CLIENTE%ROWTYPE
    );
    TYPE TENTRENADOR IS RECORD (
        NOMBRE USUARIO.NOMBRE%TYPE,
        APELLIDOS USUARIO.APELLIDOS%TYPE,
        TELEFONO USUARIO.TELEFONO%TYPE,
        DIRECCION USUARIO.DIRECCION%TYPE,
        CORREOE USUARIO.CORREOE%TYPE,
        DISPONIBILIDAD ENTRENADOR.DISPONIBILIDAD%TYPE,
        CENTRO ENTRENADOR.CENTRO_ID%TYPE
    );
    PROCEDURE CREA_ENTRENADOR(
        P_DATOS IN TENTRENADOR,
        P_USERPASS IN VARCHAR2,
        P_USUARIO OUT USUARIO%ROWTYPE,
        P_ENTRENADOR OUT ENTRENADOR%ROWTYPE
    );
    TYPE TGERENTE IS RECORD (
        NOMBRE USUARIO.NOMBRE%TYPE,
        APELLIDOS USUARIO.APELLIDOS%TYPE,
        TELEFONO USUARIO.TELEFONO%TYPE,
        DIRECCION USUARIO.DIRECCION%TYPE,
        CORREOE USUARIO.CORREOE%TYPE,
        DESPACHO GERENTE.DESPACHO%TYPE,
        HORARIO GERENTE.HORARIO%TYPE,
        CENTRO GERENTE.CENTRO_ID%TYPE
    );
    PROCEDURE CREA_GERENTE(
        P_DATOS IN TCLIENTE,
        P_USERPASS IN VARCHAR2,
        P_USUARIO OUT USUARIO%ROWTYPE,
        P_GERENTE OUT GERENTE%ROWTYPE
    );
    PROCEDURE ELIMINA_USER(P_ID USUARIO.ID%TYPE);
    PROCEDURE ELIMINA_CLIENTE(P_ID USUARIO.ID%TYPE);
    PROCEDURE ELIMINA_GERENTE(P_ID USUARIO.ID%TYPE);
    PROCEDURE ELIMINA_ENTRENADOR(P_ID USUARIO.ID%TYPE);
    PROCEDURE ELIMINA_CENTRO(P_ID CENTRO.ID%TYPE);
END BASE;

--DESDE BODY

create or replace PACKAGE BODY BASE AS 
    
    PROCEDURE CREA_CLIENTE(
        P_DATOS IN TCLIENTE,
        P_USERPASS IN VARCHAR2,
        P_USUARIO OUT USUARIO%ROWTYPE,
        P_CLIENTE OUT CLIENTE%ROWTYPE
    )AS
        v_user VARCHAR2 (250 CHAR);
        v_rol VARCHAR2 (250 CHAR);
    BEGIN
        SAVEPOINT CREA_CLIENTE_POINT;
        INSERT INTO USUARIO(NOMBRE, APELLIDOS, TELEFONO, DIRECCION, CORREOE)
        VALUES (P_DATOS.NOMBRE, P_DATOS.APELLIDOS, P_DATOS.TELEFONO, P_DATOS.DIRECCION, P_DATOS.CORREOE)
        RETURNING ID, NOMBRE, APELLIDOS, TELEFONO, DIRECCION, CORREOE, usuariooracle INTO P_USUARIO;
        INSERT INTO CLIENTE(ID, objetivo, dieta_id, preferencias, centro_id)
        VALUES ( p_usuario.ID, P_DATOS.OBJETIVOS, p_datos.DIETA, P_DATOS.PREFERENCIAS, P_DATOS.CENTRO)
        RETURNING  ID, OBJETIVO, PREFERENCIAS, DIETA_ID,centro_id INTO P_CLIENTE;
        v_user := 'CREATE USER ' || P_USUARIO.USUARIOORACLE || ' IDENTIFIED BY ' || P_USERPASS || ' DEFAULT TABLESPACE TS_LIFEFIT QUOTA UNLIMITED ON TS_LIFEFIT';
        v_rol := ' GRANT Cliente TO ' || P_USUARIO.USUARIOORACLE;
        EXECUTE IMMEDIATE v_user;
        EXECUTE IMMEDIATE v_rol;
        COMMIT;
    EXCEPTION 
        WHEN OTHERS THEN
            ROLLBACK TO CREA_CLIENTE_POINT;
            DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
            RAISE EXCEPCION_CREACION;
    END CREA_CLIENTE;

    PROCEDURE CREA_ENTRENADOR(
        P_DATOS IN TENTRENADOR,
        P_USERPASS IN VARCHAR2,
        P_USUARIO OUT USUARIO%ROWTYPE,
        P_ENTRENADOR OUT ENTRENADOR%ROWTYPE
    )AS
    BEGIN
        SAVEPOINT CREA_ENTRENADOR_POINT;
        COMMIT;
    EXCEPTION 
        WHEN OTHERS THEN
            ROLLBACK TO CREA_ENTRENADOR_POINT;
    END CREA_ENTRENADOR;

    PROCEDURE CREA_GERENTE(
        P_DATOS IN TCLIENTE,
        P_USERPASS IN VARCHAR2,
        P_USUARIO OUT USUARIO%ROWTYPE,
        P_GERENTE OUT GERENTE%ROWTYPE
    )AS
    BEGIN
        SAVEPOINT CREA_GERENTE_POINT;
        COMMIT;
    EXCEPTION 
        WHEN OTHERS THEN
            ROLLBACK TO CREA_GERENTE_POINT;
    END CREA_GERENTE;
    PROCEDURE ELIMINA_USER(P_ID USUARIO.ID%TYPE)AS
    BEGIN
        SAVEPOINT ELIMINA_USER_POINT;
    END ELIMINA_USER;
    PROCEDURE ELIMINA_CLIENTE(P_ID USUARIO.ID%TYPE)AS
    BEGIN
        SAVEPOINT ELIMINA_CLIENTE_POINT;
    END ELIMINA_CLIENTE;
    PROCEDURE ELIMINA_GERENTE(P_ID USUARIO.ID%TYPE)AS
    BEGIN
        SAVEPOINT ELIMINA_GERENTE_POINT;
    END ELIMINA_GERENTE;
    PROCEDURE ELIMINA_ENTRENADOR(P_ID USUARIO.ID%TYPE)AS
    BEGIN
        SAVEPOINT ELIMINA_ENTRENADOR_POINT;
    END ELIMINA_ENTRENADOR;
    PROCEDURE ELIMINA_CENTRO(P_ID CENTRO.ID%TYPE)AS
    BEGIN
        SAVEPOINT ELIMINA_CENTRO_POINT;
    END ELIMINA_CENTRO;
END BASE;